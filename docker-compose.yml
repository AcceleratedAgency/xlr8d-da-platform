services:
  message-bus:
    image: rabbitmq:3.13.3-alpine
    restart: always
    volumes:
      - message-bus_data:/var/lib/rabbitmq
      - ./core/message-bus/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./core/message-bus/definitions.json:/etc/rabbitmq/definitions.json
    networks:
      - xlr8d-core
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: id8a79cyeJowxWO8VCgkShc2MHxnZeNr
      ENABLE_DEBUG: dev
  database:
    image: mongo:7.0.12
    restart: always
    volumes:
      - database_db:/data/db
      - database_configdb:/data/configdb
      - ./core/database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - xlr8d-core
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: id8a79cyeJowxWO8VCgkShc2MHxnZeNr
      MONGO_INITDB_DATABASE: admin
      ENABLE_DEBUG: dev
  config-manager:
    image: node:20-alpine
    restart: always
    deploy:
      replicas: 3
    volumes:
      - ./core/config-manager:/app:rw
    working_dir: /app
    command: sh -c "npm install && npm start"
    networks:
      - xlr8d-core
    environment:
      RABBITMQ_USER: da_scheduler
      RABBITMQ_PASS: emfQ9kZwSsEUxfAkL6mYCaQ801ObM8F0
      RABBITMQ_HOST: message-bus/da_platform
      MESSAGE_BUS_TOPIC: da_platform_messagebus
      ENVIRONMENT: dev
    depends_on:
      - message-bus
      - database
  scheduler:
    image: node:20-alpine
    restart: always
    deploy:
      replicas: 3
    volumes:
      - ./core/scheduler:/app:rw
    working_dir: /app
    command: sh -c "npm install && npm start"
    networks:
      - xlr8d-core
    environment:
      RABBITMQ_USER: da_scheduler
      RABBITMQ_PASS: emfQ9kZwSsEUxfAkL6mYCaQ801ObM8F0
      RABBITMQ_HOST: message-bus/da_platform
      MESSAGE_BUS_TOPIC: da_platform_messagebus
      CONFIG_KEY: scheduler
    depends_on:
      - message-bus
      - database
      - config-manager
  web-scraper:
    image: node:20-alpine
    restart: always
    deploy:
      replicas: 1
    volumes:
      - ./services/web-scraper:/app:rw
    working_dir: /app
    command: sh -c "npm install && npm run da_platform"
    networks:
      - xlr8d-core
    environment:
      RABBITMQ_USER: da_subscriber
      RABBITMQ_PASS: hXacCbPlhLkt14elulbo0opmvUAUIin3
      RABBITMQ_HOST: message-bus/da_platform
      MESSAGE_BUS_TOPIC: da_platform_messagebus
      CONFIG_KEY: web-scraper
    depends_on:
      - message-bus
      - database
      - config-manager
      - scheduler
  message-classifier:
    image: python:3.12-alpine
    restart: always
    deploy:
      replicas: 3
    volumes:
      - ./services/message-classifier:/app:rw
    working_dir: /app
    command: sh da_platform.init.sh
    networks:
      - xlr8d-core
    environment:
      RABBITMQ_USER: da_subscriber
      RABBITMQ_PASS: hXacCbPlhLkt14elulbo0opmvUAUIin3
      RABBITMQ_HOST: message-bus
      RABBITMQ_VHOST: da_platform
      MESSAGE_BUS_TOPIC: da_platform_messagebus
      CONFIG_KEY: message-classifier
      ENABLE_DEBUG: dev
    depends_on:
      - message-bus
      - database
      - config-manager
      - scheduler
  da-crewai:
    image: python:3.12-alpine
    restart: always
    deploy:
      replicas: 3
    volumes:
      - ./services/da-crewai:/app:rw
    working_dir: /app
    command: sh da_platform.init.sh
    networks:
      - xlr8d-core
    environment:
      RABBITMQ_USER: da_subscriber
      RABBITMQ_PASS: hXacCbPlhLkt14elulbo0opmvUAUIin3
      RABBITMQ_HOST: message-bus
      RABBITMQ_VHOST: da_platform
      MESSAGE_BUS_TOPIC: da_platform_messagebus
      CONFIG_KEY: da-crewai
      ENABLE_DEBUG: dev
    depends_on:
      - message-bus
      - database
      - config-manager
      - scheduler
volumes:
  message-bus_data:
  database_db:
  database_configdb:
networks:
  xlr8d-core: